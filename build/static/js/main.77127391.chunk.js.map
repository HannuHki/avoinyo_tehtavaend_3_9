{"version":3,"sources":["components/Person.js","services/persons.js","components/Notification.js","App.js","logo.svg","index.js"],"names":["baseUrl","newObject","axios","post","then","response","data","Notification","message","className","initialFormData","Object","freeze","username","password","Footer","style","color","fontStyle","fontSize","App","useState","persons","setPersons","newPerson","setNewPerson","newNumber","setNewNumber","showAll","errorMessage","setErrorMessage","useEffect","console","log","get","length","addPerson","event","preventDefault","personObject","name","number","id","setTimeout","personService","returnedPerson","concat","resultName","map","person","filter","important","onClick","userId","fetch","method","json","result","alert","onSubmit","value","onChange","target","i","ReactDOM","render","document","getElementById"],"mappings":"sOAKA,ICFMA,EAAU,iEAiBD,EAVA,SAAAC,GAEb,OADgBC,IAAMC,KAAKH,EAASC,GACrBG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCE5BC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKC,UAAU,QAAf,SACGD,KCkBDE,GC3BS,I,MD2BSC,OAAOC,OAAO,CACpCC,SAAU,GACVC,SAAU,SAGNC,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GAmLSC,MA9Kf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,OAEiBF,mBAAS,IAF1B,gCAGqBA,mBAAS,KAH9B,mBAGNG,EAHM,KAGKC,EAHL,OAIqBJ,mBAAS,IAJ9B,mBAINK,EAJM,KAIKC,EAJL,OAKiBN,oBAAS,GAL1B,mBAKNO,EALM,aAMsBP,mBAASX,IAN/B,gCAO2BW,mBAAS,OAPpC,mBAONQ,EAPM,KAOQC,EAPR,KASbC,qBAAU,WACRC,QAAQC,IAAI,UACZ/B,IAGGgC,IAAI,kEACJ9B,MAAK,SAAAC,GACJ2B,QAAQC,IAAI,qBACZ,IAAMX,EAAUjB,EAASC,KACzB0B,QAAQC,IAAI,eAAgBX,GAC5BC,EAAWlB,EAASC,WAErB,IACH0B,QAAQC,IAAI,SAAUX,EAAQa,OAAQ,WAEtC,IAAMC,EAAY,SAACC,GACjBA,EAAMC,iBACN,IACMC,EAAe,CACnBC,KAAMhB,EACNiB,OAAQf,EAGRgB,GAAIpB,EAAQa,OAAS,GAEvBL,EACE,gBAAkBN,GAEpBmB,YAAW,WACTb,EAAgB,QACf,KAEHc,EACQL,GACLnC,MAAK,SAAAyC,GACNtB,EAAWD,EAAQwB,OAAOD,IAC1Bb,QAAQC,IAAI,gBAAiBT,GAC7BC,EAAa,IACbE,EAAa,QAWXoB,EAAazB,EAAQ0B,KAAI,SAAAC,GAAM,OAAIA,EAAOT,QAsFlD,OApEwBZ,GAElBN,EAAQ4B,QAAO,SAAAD,GAAM,OAAIA,EAAOE,aAmEpC,gCACE,yCACA,6BAAKtB,IACL,cAAC,EAAD,CAAcrB,QAASqB,IACvB,6BACGP,EAAQ0B,KAAI,SAAAC,GAAM,OACnB,+BAAKA,EAAOT,KACZ,yBAAQY,QAAS,kBA7BJC,EA6BkBJ,EAAOP,QAjBxCY,MAAM,iCAAmCD,EAHlB,CACrBE,OAAQ,WAEuDnD,MAAK,SAACC,GACrE,OAAOA,EAASmD,UACfpD,MAAK,SAACqD,GACPC,MAAM,UAAWL,MAfrB,IAAiBA,GA6Bb,oBAAmDJ,EAAOT,gBAI5D,uBAAMmB,SAAUvB,EAAhB,sBAEE,uBACEwB,MAAOpC,EACPqC,SApGqB,SAACxB,GAC1BL,QAAQC,IAAII,EAAMyB,OAAOF,OACzB,IAAIG,EAAI,EACR,GACMhB,EAAWgB,KAAO1B,EAAMyB,OAAOF,OACjCF,MAAM,yBAERK,GAAQ,QACDA,EAAEhB,EAAWZ,QACtBV,EAAaY,EAAMyB,OAAOF,UA6FxB,gDAEE,uBAAOA,MAAOlC,EAAWmC,SA5FJ,SAACxB,GAC1BL,QAAQC,IAAII,EAAMyB,OAAOF,OACzBjC,EAAaU,EAAMyB,OAAOF,gBA6F1B,wBAAQR,QAAShB,EAAjB,kBACA,qCACA,cAAC,EAAD,QEjNN4B,IAASC,OACL,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.77127391.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction sayHello(name) {\r\n    alert(name)\r\n}\r\nconst Person = ({ person }) => {\r\n    console.log('props: ',person)\r\n    return (\r\n        <li>{person.name}\r\n        <button onClick={() => sayHello(person.name)}>{person.name}</button>\r\n        </li>\r\n        \r\n    )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/persons'\r\n//const baseUrl = '/api/persons'\r\nconst baseUrl = 'https://hannu-avoinyo-tehtavaend-3-9.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Person from './components/Person'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport logo from './logo.svg';\nimport './App.css';\n\n/*\n- Kun uusi nimi lisätään, painetaan save-painiketta ja kutsutaan funktiota addName.\nTämä lisää nimen hookeihin ja tyhjentää tarvittavat kentät. Viesti lähetetään Notification komponentille ja ajastin näyttää viestin 5 sekuntia.\nValitettavasti nimen poistaminen palauttaa virheen 404 ja henkilön poistaminen luettelosta ei onnistu.\n\n-komponentti './components/Notification' palauttaa viestin, jonka className = \"error\". Idex.css on määritelty muotoilu tälle viestille:\n.error {\n  color: green;\n  background: lightgrey;\n  font-size: 20px;\n  border-style: solid;\n  border-radius: 5px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n- Myös Footerille on annettu tyyli.\n*/\n\n// https://linguinecode.com/post/how-to-get-form-data-on-submit-in-reactjs\nconst initialFormData = Object.freeze({\n  username: \"\",\n  password: \"moi\"\n});\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div>\n  )\n}\n\nfunction App() {\n  const [persons, setPersons] = useState([]) \n  const [numbers, setNumbers] = useState([])\n  const [newPerson, setNewPerson] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [formData, updateFormData] = useState(initialFormData);\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {    \n    console.log('effect')    \n    axios      \n//      .get('http://localhost:3001/persons') \n//      .get('http://localhost:3001/api/persons')   \n      .get('https://hannu-avoinyo-tehtavaend-3-9.herokuapp.com/api/persons')\n      .then(response => {        \n        console.log('promise fulfilled') \n        const persons = response.data\n        console.log('anxios get: ', persons)       \n        setPersons(response.data)      \n      })  \n    }, [])  \n    console.log('render', persons.length, 'persons')\n\n    const addPerson = (event) => {\n      event.preventDefault()\n      var newname = ''\n      const personObject = {\n        name: newPerson,\n        number: newNumber,\n        //date: new Person().toISOString(),\n        //important: Math.random() > 0.5,\n        id: persons.length + 1,\n      }\n      setErrorMessage(\n        \"Added person \" + newPerson\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n\n      personService\n      .create(personObject)\n        .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        console.log('addPerson... ', newPerson)\n        setNewPerson('')\n        setNewNumber('')\n\n//      axios\n//      .post('http://localhost:3001/persons',personObject)\n//      .then(response => {\n//        setPersons(persons.concat(personObject))\n//        setNewPerson('')\n//        setNumbers(numbers.concat(personObject))\n//        setNewNumber('')\n      })\n    }\n    const resultName = persons.map(person => person.name)\n\n    const handlePersonChange = (event) => {\n      console.log(event.target.value)\n      let i = 0;\n      do {\n        if (resultName[i] === event.target.value) {\n          alert(\"Name is already added\")\n        }\n        i = i + 1;\n      } while (i<resultName.length)\n      setNewPerson(event.target.value)\n    }\n    \n    const handleNumberChange = (event) => {\n      console.log(event.target.value)\n      setNewNumber(event.target.value)\n    }\n    const personsToShow = showAll\n      ? persons\n      : persons.filter(person => person.important)\n\n    const handleKoeChange = (e) => {\n      console.log('handleKoeChange...', e.target.value)\n      updateFormData(e.target.value)\n    }\n    const handleKoeSubmit = (e) => {\n      e.preventDefault()\n      console.log('handleKoeSubmit', formData)\n    }\n\n    function showTime() {\n      var currentTime = new Date();\n      console.log('The current time is: ' + currentTime);\n      sayHello();\n      function sayHello() {\n        alert('Hello!');\n      }\n    }\n    // https://www.newline.co/fullstack-react/30-days-of-react/day-15/\n    //var currentTime = getCurrentTime()\n    //console.log('The current time is: ' + currentTime);\n    function showTime2() {\n      function getCurrentTime() {\n        // Get the current 'global' time from an API using Promise\n        return new Promise((resolve, reject) => {\n          setTimeout(function() {\n            var didSucceed = Math.random() >= 0.5;\n            didSucceed ? resolve(new Date()) : reject('Error');\n          }, 2000);\n        })\n      }\n      getCurrentTime()\n        .then(currentTime => getCurrentTime())\n        .then(currentTime => {\n          console.log('The current time is: ' + currentTime);\n          return true;\n        })\n        .then(currentTimeMessage => console.log(currentTimeMessage))\n        .catch(err => console.log('There was an error:' + err))\n    }\n    function showPersons() {\n      const result = persons.map(person => person.id)\n      console.log('result: ', result)\n    }\n    function sayName(userId){\n      //axios.delete(`http://localhost:3000/persons/${id}`)\n      //.then(res => {\n      //  console.log(res);\n      //  console.log(res.data);\n      //  const posts = this.state.posts.filter(item => item.id !== id);\n      //  this.setState({ posts });\n      //})\n      \n      const requestOptions = {\n        method: 'DELETE'\n      };\n      fetch(\"http://localhost:3000/persons/\" + userId, requestOptions).then((response) => {\n        return response.json();\n      }).then((result) => {\n        alert('tuhottu', userId)\n        // do what you want with the response here\n      }); \n    }\n\n  \n  return (\n    <div>\n      <h1>Persons</h1>\n      <h2>{errorMessage}</h2>\n      <Notification message={errorMessage} />\n      <ul>\n        {persons.map(person => \n        <li>{person.name}\n        <button onClick={() => sayName(person.id)}>delete {person.name}</button>\n        </li>\n        )}\n      </ul>\n      <form onSubmit={addPerson}>\n        Add name:\n        <input\n          value={newPerson}\n          onChange={handlePersonChange}\n        />\n        <label>\n        Add number:\n          <input value={newNumber} onChange={handleNumberChange} />\n        </label>\n      </form>\n      <button onClick={addPerson}>save</button>\n      <h5>...</h5>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}